//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SimpleUsefulTimer.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "17.11.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color TimerBackground {
            get {
                return ((global::System.Drawing.Color)(this["TimerBackground"]));
            }
            set {
                this["TimerBackground"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int TimerFontSize {
            get {
                return ((int)(this["TimerFontSize"]));
            }
            set {
                this["TimerFontSize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point LastTimerWindowPosition {
            get {
                return ((global::System.Drawing.Point)(this["LastTimerWindowPosition"]));
            }
            set {
                this["LastTimerWindowPosition"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Black")]
        public global::System.Drawing.Color DefaultTimerBackground {
            get {
                return ((global::System.Drawing.Color)(this["DefaultTimerBackground"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("55")]
        public int DefaultTimerFontSize {
            get {
                return ((int)(this["DefaultTimerFontSize"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0, 0")]
        public global::System.Drawing.Point DefaultWindowPosition {
            get {
                return ((global::System.Drawing.Point)(this["DefaultWindowPosition"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Gold")]
        public global::System.Drawing.Color DefaultTimerForeground {
            get {
                return ((global::System.Drawing.Color)(this["DefaultTimerForeground"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color TimerForeground {
            get {
                return ((global::System.Drawing.Color)(this["TimerForeground"]));
            }
            set {
                this["TimerForeground"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Drawing.Color TimerForegroundGradient {
            get {
                return ((global::System.Drawing.Color)(this["TimerForegroundGradient"]));
            }
            set {
                this["TimerForegroundGradient"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UseTimerForegroundGradient {
            get {
                return ((bool)(this["UseTimerForegroundGradient"]));
            }
            set {
                this["UseTimerForegroundGradient"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("187, 155, 73")]
        public global::System.Drawing.Color DefaultForegroundGradient {
            get {
                return ((global::System.Drawing.Color)(this["DefaultForegroundGradient"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UseCustomTimerForeground {
            get {
                return ((bool)(this["UseCustomTimerForeground"]));
            }
            set {
                this["UseCustomTimerForeground"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool DidReadWelcomeMessage {
            get {
                return ((bool)(this["DidReadWelcomeMessage"]));
            }
            set {
                this["DidReadWelcomeMessage"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("49")]
        public int DefaultToggleTimerHotkey {
            get {
                return ((int)(this["DefaultToggleTimerHotkey"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("50")]
        public int DefaultResetTimerHotkey {
            get {
                return ((int)(this["DefaultResetTimerHotkey"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int ToggleTimerHotkey {
            get {
                return ((int)(this["ToggleTimerHotkey"]));
            }
            set {
                this["ToggleTimerHotkey"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public int ResetTimerHotkey {
            get {
                return ((int)(this["ResetTimerHotkey"]));
            }
            set {
                this["ResetTimerHotkey"] = value;
            }
        }
    }
}
